{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/07/adoptopenjdk-8u262-1108-and-1402-available/","result":{"data":{"site":{"siteMetadata":{"title":"AdoptOpenJDK Blog","siteUrl":"https://blog.adoptopenjdk.net","social":{"twitter":"AdoptOpenJDK"}}},"mdx":{"id":"cf44870b-08d6-51f8-8e97-e4b46f1dee8b","excerpt":"AdoptOpenJDK is happy to announce the immediate availability of AdoptOpenJDK 8u262, 11.0.8, and 14.0.2. Binaries are available for download of OpenJDK andâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AdoptOpenJDK 8u262, 11.0.8, and 14.0.2 Available\",\n  \"date\": \"2020-07-16T12:00:00+00:00\",\n  \"author\": \"andreasahlenstorf\",\n  \"description\": \"AdoptOpenJDK is happy to announce the immediate availability of AdoptOpenJDK 8u262, 11.0.8, and 14.0.2. Binaries are available for download of OpenJDK and Eclipse OpenJ9 (with OpenJDK class libraries). As always, all binaries are thoroughly tested and available free of charge without usage restrictions on a wide range of platforms.\",\n  \"tags\": [\"announcement\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"AdoptOpenJDK is happy to announce the immediate availability of AdoptOpenJDK 8u262, 11.0.8, and 14.0.2. Binaries are available for download of OpenJDK and Eclipse OpenJ9 (with OpenJDK class libraries). As always, all binaries are thoroughly tested (except 32-bit ARM, see below) and available free of charge without usage restrictions on a wide range of platforms.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bugs.openjdk.java.net/browse/JDK-8248399?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%20openjdk8u262%20ORDER%20BY%20created%20DESC\"\n  }, \"List of security fixes and other fixes in OpenJDK 8u262\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bugs.openjdk.java.net/browse/JDK-8247827?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2011.0.8%20ORDER%20BY%20created%20DESC\"\n  }, \"List of security fixes and other fixes in OpenJDK 11.0.8\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bugs.openjdk.java.net/browse/JDK-8248956?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2014.0.2%20ORDER%20BY%20created%20DESC\"\n  }, \"List of security fixes and other fixes in OpenJDK 14.0.2\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/eclipse/openj9/blob/master/doc/release-notes/0.21/0.21.md\"\n  }, \"List of changes in Eclipse OpenJ9 0.21.0\")))), mdx(\"h2\", null, \"New and Noteworthy\"), mdx(\"h3\", null, \"Java Flight Recorder Available in 8u262\"), mdx(\"p\", null, \"Java Flight Recorder (JFR) is a tool for collecting diagnostics of a running Java application. This diagnostic information can, for example, be analyzed with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://jdk.java.net/jmc/\"\n  }, \"JDK Mission Control\"), \". JFR was previously only available in Oracle JDK 8, and OpenJDK 11 or later. With OpenJDK 8u262, is now also part of OpenJDK 8 and can be used with AdoptOpenJDK without usage restrictions. Flight recording can be enabled on the command line like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ java -XX:StartFlightRecording:filename=recording.jfr,duration=60s ... \"))), mdx(\"p\", null, \"It is also possible to enable flight recording for an already running JVM using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"jcmd\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ jcmd <pid> JFR.start\\n$ jcmd <pid> JFR.dump filename=recording.jfr\"))), mdx(\"p\", null, \"Run \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"jcmd\"), \" to get a list of available PIDs. The resulting recording can be analyzed using various tools. A popular choice is JDK Mission Control (JMC) \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://adoptopenjdk.net/jmc.html\"\n  }, \"that is also available from AdoptOpenJDK\"), \".\"), mdx(\"h3\", null, \"Auto-Upgrading Homebrew Casks for JRE, OpenJ9\"), mdx(\"p\", null, \"Users of AdoptOpenJDK can always get the latest and greatest version of the JDK with HotSpot by installing the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"adoptopenjdk\"), \" cask:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ brew cask install adoptopenjdk\"))), mdx(\"p\", null, \"We have added additional casks that automatically upgrade to the latest and greatest version of the JRE and OpenJ9, too. If you haven\\u2019t already, you need to first activate the AdoptOpenJDK tap: \"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ brew tap AdoptOpenJDK/openjdk\"))), mdx(\"p\", null, \"You can then choose between these auto-upgrading casks and install them with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"brew cask install <name>\"), \": \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adoptopenjdk\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adoptopenjdk-jre\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adoptopenjdk-openj9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adoptopenjdk-openj9-jre\")), mdx(\"h2\", null, \"A Note on Binaries for 32-bit ARM \", mdx(\"a\", {\n    name: \"a-note-on-binaries-for-32-bit-arm\"\n  })), mdx(\"p\", null, \"Because we\\u2019re short on machines with 32-bit ARM CPUs and those we have are also incredibly slow, our testing capacity is minimal. As a result, we haven\\u2019t caught a bug in the last release that caused certain SSL connections to fail. This has been fixed in the meantime. We are already looking into procuring additional capacity that should make it possible to re-enable our entire test suite and deliver binaries that match our quality criteria.\"), mdx(\"p\", null, \"Another longstanding problem is that AdoptOpenJDK 8 on 32-bit ARM only supports interpreted mode (Zero VM). We would very much like to fix that. Hence, we\\u2019re looking for volunteers who help us build AdoptOpenJDK 8 with a proper client VM that is already available on AdoptOpenJDK 11 and higher.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"AdoptOpenJDK 8u262, 11.0.8, and 14.0.2 Available","author":"andreasahlenstorf","date":"July 16, 2020","description":"AdoptOpenJDK is happy to announce the immediate availability of AdoptOpenJDK 8u262, 11.0.8, and 14.0.2. Binaries are available for download of OpenJDK and Eclipse OpenJ9 (with OpenJDK class libraries). As always, all binaries are thoroughly tested and available free of charge without usage restrictions on a wide range of platforms.","tags":["announcement"],"featuredImage":null}}},"pageContext":{"slug":"/adoptopenjdk-8u262-1108-and-1402-available/","postPath":"/2020/07/adoptopenjdk-8u262-1108-and-1402-available/","previous":{"fields":{"slug":"/adoptopenjdk-virtual-roadshow/","postPath":"/2020/07/adoptopenjdk-virtual-roadshow/"},"frontmatter":{"title":"AdoptOpenJDK Virtual Roadshow","tags":["AdoptOpenJDK","Conferences"]}},"next":{"fields":{"slug":"/adoptopenjdk-8u265-available/","postPath":"/2020/07/adoptopenjdk-8u265-available/"},"frontmatter":{"title":"AdoptOpenJDK 8u265 Available","tags":["announcement"]}}}},"staticQueryHashes":["1790439409","3142611149","368503166"]}